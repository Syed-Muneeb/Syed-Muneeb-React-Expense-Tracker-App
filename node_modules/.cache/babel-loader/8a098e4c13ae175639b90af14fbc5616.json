{"ast":null,"code":"import _slicedToArray from\"/home/syedmuneeb/Documents/GitHub/demo2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useReducer}from'react';// import the Reducer \nimport AppReducer from'./AppReducer';var initialSate={transactions:[]};// create global context\nexport var GlobalContext=createContext(initialSate);// create a provider for global context \nexport var GlobalProvider=function GlobalProvider(_ref){var children=_ref.children;var _useReducer=useReducer(AppReducer,initialSate),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Actions for Transactions\n// Delete Existing Transaction Action\nfunction delTransaction(id){dispatch({type:'DELETE_TRANSACTION',payload:id});}// Add New Transaction Action\nfunction addTransaction(transaction){dispatch({type:'ADD_TRANSACTION',payload:transaction});}return/*#__PURE__*/React.createElement(GlobalContext.Provider,{value:{transactions:state.transactions,delTransaction:delTransaction,addTransaction:addTransaction}},\" \",children);};","map":{"version":3,"sources":["/home/syedmuneeb/Documents/GitHub/demo2/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialSate","transactions","GlobalContext","GlobalProvider","children","state","dispatch","delTransaction","id","type","payload","addTransaction","transaction"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,OAAjD,CAEA;AAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAIA,GAAMC,CAAAA,WAAW,CAAG,CAEhBC,YAAY,CAAC,EAFG,CAApB,CAKA;AAEA,MAAO,IAAOC,CAAAA,aAAa,CAAGL,aAAa,CAACG,WAAD,CAApC,CAEP;AAEA,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,iBAEnBN,UAAU,CAACC,UAAD,CAAYC,WAAZ,CAFS,4CAErCK,KAFqC,iBAE/BC,QAF+B,iBAK5C;AAEI;AACA,QAASC,CAAAA,cAAT,CAAwBC,EAAxB,CAA4B,CACxBF,QAAQ,CAAC,CACLG,IAAI,CAAE,oBADD,CAELC,OAAO,CAAEF,EAFJ,CAAD,CAAR,CAIH,CAED;AACA,QAASG,CAAAA,cAAT,CAAwBC,WAAxB,CAAqC,CACjCN,QAAQ,CAAC,CACLG,IAAI,CAAE,iBADD,CAELC,OAAO,CAAEE,WAFJ,CAAD,CAAR,CAIH,CAED,mBAEI,oBAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAEzB,CACQX,YAAY,CAAGI,KAAK,CAACJ,YAD7B,CAESM,cAAc,CAAdA,cAFT,CAGUI,cAAc,CAAdA,cAHV,CAFJ,MASIP,QATJ,CAFJ,CAeP,CAtCM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// import the Reducer \n\nimport AppReducer from './AppReducer';\n\n\n\nconst initialSate = {\n\n    transactions:[]\n}\n\n// create global context\n\nexport const  GlobalContext = createContext(initialSate);\n\n// create a provider for global context \n\nexport const GlobalProvider = ({ children }) => {\n\n    const [state,dispatch] = useReducer(AppReducer,initialSate);\n\n\n    // Actions for Transactions\n\n        // Delete Existing Transaction Action\n        function delTransaction(id) {\n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            });\n        }\n\n        // Add New Transaction Action\n        function addTransaction(transaction) {\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                payload: transaction\n            })\n        }\n\n        return(\n\n            <GlobalContext.Provider value={\n \n                {\n                        transactions : state.transactions,\n                         delTransaction,\n                          addTransaction\n                        \n                }\n\n            }> {children}\n\n            </GlobalContext.Provider>\n        )\n}"]},"metadata":{},"sourceType":"module"}